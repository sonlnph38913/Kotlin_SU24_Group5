Index: app/src/main/java/com/example/kotlin_su24_group5/SignIn.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/SignIn.kt b/app/src/main/java/com/example/kotlin_su24_group5/SignIn.kt
new file mode 100644
--- /dev/null	(date 1717322357619)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/SignIn.kt	(date 1717322357619)
@@ -0,0 +1,221 @@
+package com.example.kotlin_su24_group5
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.widget.Toast
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxHeight
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.foundation.text.BasicText
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
+import androidx.compose.material3.Divider
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.OutlinedTextField
+import androidx.compose.material3.Text
+import androidx.compose.material3.TextField
+import androidx.compose.material3.TextFieldDefaults
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.draw.shadow
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.res.colorResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.ParagraphStyle
+import androidx.compose.ui.text.SpanStyle
+import androidx.compose.ui.text.buildAnnotatedString
+import androidx.compose.ui.text.font.Font
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.text.input.VisualTransformation
+import androidx.compose.ui.text.withStyle
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.core.graphics.toColorInt
+import androidx.navigation.NavController
+
+
+class SignIn : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {
+            LoginScreen()
+
+        }
+    }
+
+    @Composable
+    fun LoginScreen() {
+        val context = LocalContext.current
+        Box(
+            modifier = Modifier
+                .background(color = Color.White)
+                .fillMaxSize()
+
+        ) {
+            Top()
+            Login(context = context)
+            SignUp()
+
+        }
+
+    }
+
+    @Composable
+    fun Top(){
+        Row(
+            modifier = Modifier
+                .height(350.dp)
+                .padding(top = 30.dp)
+        ) {
+            Image(
+                painter = painterResource(id = R.drawable.logo),
+                contentDescription = null,
+                modifier = Modifier.fillMaxSize()
+
+            )
+
+
+        }
+    }
+
+
+
+    @Composable
+    fun Login(context: Context) {
+        val defaulUser = "kotlin"
+        val defaultPassword = "123"
+        var user by remember { mutableStateOf("") }
+        var password by remember { mutableStateOf("") }
+        var isLoggedIn by remember { mutableStateOf(false) }
+
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .padding(top = 150.dp),
+            contentAlignment = Alignment.Center
+        ) {
+            Column(
+                modifier = Modifier.padding(horizontal = 16.dp),
+                horizontalAlignment = Alignment.CenterHorizontally
+            ) {
+                OutlinedTextField(
+                    value = user,
+                    onValueChange = { user = it },
+                    label = { Text("User") },
+                    modifier = Modifier.fillMaxWidth()
+                )
+
+                OutlinedTextField(
+
+                    value = password,
+                    onValueChange = { password = it },
+                    label = { Text("Password") },
+                    visualTransformation = PasswordVisualTransformation(),
+                    keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
+                    modifier = Modifier.fillMaxWidth()
+                        .padding(top = 10.dp)
+                )
+                Spacer(modifier = Modifier.height(16.dp))
+
+                Box (
+                    modifier = Modifier
+                        .padding(top = 60.dp),
+
+
+                ){
+
+                    Button(
+                        onClick = {
+                            if (password == defaultPassword &&  user==defaulUser) {
+                                val intent = Intent(context, Menu::class.java)
+                                context.startActivity(intent)
+                                Toast.makeText(context, "Welcome To Group5", Toast.LENGTH_SHORT).show()
+                            } else {
+                                Toast.makeText(context, "Tên người dùng hoặc mật khẩu không hợp lệ", Toast.LENGTH_SHORT).show()
+                            }
+                        },
+                        enabled = !isLoggedIn,
+                        colors = ButtonDefaults.buttonColors(Color.Black),
+                        modifier = Modifier.size(width = 280.dp, height = 50.dp)
+
+                        ) {
+                        Text(
+                            text = "Login",
+                            color = Color.White,
+                            fontSize = 25.sp
+                        )
+                    }
+
+
+                }
+
+
+            }
+        }
+    }
+
+    @Composable
+    fun SignUp(){
+        val context = LocalContext.current
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .padding(top = 500.dp),
+            contentAlignment = Alignment.Center
+        ){
+            Button(
+                onClick = {val intent = Intent(context, SignUp::class.java)
+                    context.startActivity(intent)},
+                colors = ButtonDefaults.buttonColors(Color.White),
+
+                ) {
+                Text(
+                    text = "Sign Up",
+                    color = Color.Black,
+                    fontSize = 18.sp,
+                    fontWeight = FontWeight.Bold
+                )
+
+            }
+        }
+
+    }
+
+
+
+
+
+    @Preview(showBackground = true)
+    @Composable
+    fun PreviewLogin(){
+        LoginScreen()
+    }
+}
\ No newline at end of file
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision dadb7a90be29274a85a302fb27156d8f2ea4f51b)
+++ b/.idea/deploymentTargetSelector.xml	(date 1717322153569)
@@ -5,6 +5,15 @@
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
+      <SelectionState runConfigName="ManHinhChao">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="MainActivity">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="Menu">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
     </selectionStates>
   </component>
 </project>
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.androidApplication)\r\n    alias(libs.plugins.jetbrainsKotlinAndroid)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.kotlin_su24_group5\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.kotlin_su24_group5\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.activity)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision dadb7a90be29274a85a302fb27156d8f2ea4f51b)
+++ b/app/build.gradle.kts	(date 1717307152226)
@@ -69,4 +69,13 @@
     androidTestImplementation(libs.androidx.ui.test.junit4)
     debugImplementation(libs.androidx.ui.tooling)
     debugImplementation(libs.androidx.ui.test.manifest)
+
+
+    implementation ("androidx.navigation:navigation-compose:2.5.3")
+
+    implementation("androidx.navigation:navigation-compose:2.7.7")
+    implementation("androidx.navigation:navigation-fragment-compose:2.8.0-beta01")
+
+
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt b/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt
new file mode 100644
--- /dev/null	(date 1717325323421)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt	(date 1717325323421)
@@ -0,0 +1,92 @@
+package com.example.kotlin_su24_group5
+
+import androidx.compose.foundation.background
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.rounded.AccountCircle
+import androidx.compose.material.icons.rounded.DateRange
+import androidx.compose.material.icons.rounded.Favorite
+import androidx.compose.material.icons.rounded.FavoriteBorder
+import androidx.compose.material.icons.rounded.Home
+import androidx.compose.material.icons.rounded.Notifications
+import androidx.compose.material.icons.rounded.ShoppingCart
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+
+
+@Composable
+fun MyNavHost(
+    navHostController: NavHostController,
+    startDestination: String,
+) {
+
+
+//    val user=User()
+    val login=Login()
+
+
+
+    NavHost(navController = navHostController,
+        startDestination = startDestination,
+        modifier = Modifier.background(Color.Black),
+        builder = {
+
+            composable(NavCons.home) {
+                login.Login1()
+
+            }
+            composable(NavCons.favorite) {
+                login.Login1()
+
+            }
+            composable(NavCons.thongbao) {
+                login.Login1()
+
+            }
+            composable(NavCons.user) {
+                login.Login1()
+
+            }
+
+
+        })
+
+}
+
+sealed class Screens(val route: String, val imageVector: ImageVector, val label: String) {
+    object Home : Screens(
+        route = NavCons.home,
+        label = "Home",
+        imageVector = Icons.Rounded.Home
+    )
+
+    object Favorite : Screens(
+        route = NavCons.favorite,
+        label = "Favorite",
+        imageVector = Icons.Rounded.ShoppingCart
+    )
+    object Thongbao : Screens(
+        route = NavCons.thongbao,
+        label = "Thông Báo",
+        imageVector = Icons.Rounded.DateRange
+    )
+    object User : Screens(
+        route = NavCons.user,
+        label = "User",
+        imageVector = Icons.Rounded.AccountCircle
+    )
+
+
+}
+
+object NavCons {
+    const val home = "Home"
+    const val favorite = "Favorite"
+    const val thongbao = "Thongbao"
+    const val user = "User"
+
+}
Index: app/src/main/java/com/example/kotlin_su24_group5/Login.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/Login.kt b/app/src/main/java/com/example/kotlin_su24_group5/Login.kt
new file mode 100644
--- /dev/null	(date 1717312181532)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/Login.kt	(date 1717312181532)
@@ -0,0 +1,113 @@
+package com.example.kotlin_su24_group5
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.Image
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.border
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.fillMaxHeight
+
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.material3.Button
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.LinkAnnotation
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.core.view.ViewCompat
+import androidx.core.view.WindowInsetsCompat
+import com.example.kotlin_su24_group5.ui.theme.Kotlin_SU24_Group5Theme
+
+class Login : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {
+            Login1()
+
+        }
+    }
+
+
+    @Composable
+    fun Login1(){
+        val context = LocalContext.current
+        Column (
+            modifier = Modifier.fillMaxSize()
+        ){
+            Column (
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .height(500.dp)
+                    .background(Color.Black)
+                    .padding(top = 30.dp),
+                horizontalAlignment = Alignment.CenterHorizontally
+
+            ){
+                Text(
+                    text ="Đăng Nhập",
+                    fontSize = 32.sp,
+                    fontWeight = FontWeight.Bold,
+                    color = Color.White,
+                )
+                Image(modifier = Modifier.fillMaxSize(),  painter = painterResource(id = R.drawable.logo),
+                    contentDescription = null)
+            }
+
+            Column(
+
+                modifier = Modifier
+                    .background(Color.DarkGray)
+                    .fillMaxSize(),
+                verticalArrangement = Arrangement.Center,
+                horizontalAlignment = Alignment.CenterHorizontally
+            ) {
+                    Image(
+                        painter = painterResource(id = R.drawable.google),
+                        contentDescription = null,
+                        modifier = Modifier.size(200.dp)
+                            .clickable { Next(context)}
+                    )
+            }
+
+        }
+
+
+
+    }
+
+
+
+
+    fun Next (context: Context) {
+        val intent = Intent(context, SignIn::class.java)
+        context.startActivity(intent)
+    }
+
+    @Preview(showBackground = true)
+    @Composable
+    fun GreetingPreview() {
+        Login1()
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/Menu.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt b/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt
new file mode 100644
--- /dev/null	(date 1717325736387)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt	(date 1717325736387)
@@ -0,0 +1,123 @@
+package com.example.kotlin_su24_group5
+
+
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.activity.enableEdgeToEdge
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.material3.Icon
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.NavigationBar
+import androidx.compose.material3.NavigationBarItem
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Surface
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableIntStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.ColorFilter
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.rememberNavController
+import com.example.kotlin_su24_group5.ui.theme.Kotlin_SU24_Group5Theme
+
+
+class Menu : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        enableEdgeToEdge()
+        setContent {
+            Kotlin_SU24_Group5Theme {
+                Surface(
+                    modifier = Modifier.fillMaxSize(),
+                    color = MaterialTheme.colorScheme.background
+                ) {
+                    val navController = rememberNavController()
+                    Scaffold(
+                        modifier = Modifier.background(Color.Black)
+                            .fillMaxWidth(),
+                        bottomBar = {
+                            BottomNav( navController = navController)
+
+                        }
+                    ) {
+                        it
+                        MyNavHost(
+                            navHostController = navController,
+                            startDestination = Screens.Home.route
+
+                        )
+                    }
+                }
+
+            }
+        }
+    }
+
+    @Preview(showBackground = true)
+    @Composable
+    fun GreetingPreview() {
+        BottomNav(navController = NavHostController(this))
+    }
+
+}
+@Composable
+fun BottomNav(
+
+    navController: NavHostController,
+) {
+    var selectedIndex by remember {
+
+        mutableIntStateOf(0)
+    }
+    val list = listOf(
+        Screens.Home,
+        Screens.Favorite,
+        Screens.Thongbao,
+        Screens.User,
+        )
+    NavigationBar(
+        modifier = Modifier.background(Color.Black)
+
+    ) {
+        list.forEachIndexed { index, screens ->
+            NavigationBarItem(
+//                modifier = Modifier.background(Color.White),
+                selected = selectedIndex == index,
+                onClick = {
+                    navController.navigate(screens.route)
+                    selectedIndex = index
+                },
+
+                icon = {
+                    Icon( imageVector = screens.imageVector,
+                        contentDescription = "",
+                        tint = Color.Black)
+                },
+                label = {
+                    Text(text = screens.label, color = Color.Black)
+
+                },
+                alwaysShowLabel = false
+
+            )
+        }
+    }
+
+
+}
+
+
+
+
+
Index: app/src/main/java/com/example/kotlin_su24_group5/ManHinhChao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kotlin_su24_group5\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\n\r\nclass ManHinhChao : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/ManHinhChao.kt b/app/src/main/java/com/example/kotlin_su24_group5/ManHinhChao.kt
--- a/app/src/main/java/com/example/kotlin_su24_group5/ManHinhChao.kt	(revision dadb7a90be29274a85a302fb27156d8f2ea4f51b)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/ManHinhChao.kt	(date 1717307672363)
@@ -1,17 +1,57 @@
 package com.example.kotlin_su24_group5
 
+import android.content.Intent
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
-import androidx.activity.enableEdgeToEdge
-import androidx.core.view.ViewCompat
-import androidx.core.view.WindowInsetsCompat
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.painterResource
+import kotlinx.coroutines.*
+import kotlin.coroutines.CoroutineContext
+
+class ManHinhChao : ComponentActivity(), CoroutineScope {
 
-class ManHinhChao : ComponentActivity() {
+    private lateinit var job: Job
+    override val coroutineContext: CoroutineContext
+        get() = Dispatchers.Main + job
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
+        job = Job()
         setContent {
-
+            Man1()
         }
+        launch {
+            delay(3000) // Wait for 3 seconds
+            startActivity(Intent(this@ManHinhChao, Login::class.java))
+            finish()
+        }
     }
+    override fun onDestroy() {
+        super.onDestroy()
+        job.cancel()
+    }
+}
+
+@Composable
+fun Man1() {
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(Color.Black),
+        contentAlignment = Alignment.Center
+    ) {
+        Image(
+            modifier = Modifier.fillMaxSize(),
+            painter = painterResource(id = R.drawable.logo),
+            contentDescription = null
+        )
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/SignUp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/SignUp.kt b/app/src/main/java/com/example/kotlin_su24_group5/SignUp.kt
new file mode 100644
--- /dev/null	(date 1717312475844)
+++ b/app/src/main/java/com/example/kotlin_su24_group5/SignUp.kt	(date 1717312475844)
@@ -0,0 +1,16 @@
+package com.example.kotlin_su24_group5
+
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.activity.enableEdgeToEdge
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.view.ViewCompat
+import androidx.core.view.WindowInsetsCompat
+
+class SignUp : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {  }
+    }
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Kotlin_SU24_Group5\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".Google\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ManHinhChao\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.Kotlin_SU24_Group5\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision dadb7a90be29274a85a302fb27156d8f2ea4f51b)
+++ b/app/src/main/AndroidManifest.xml	(date 1717325915833)
@@ -13,7 +13,7 @@
         android:theme="@style/Theme.Kotlin_SU24_Group5"
         tools:targetApi="31">
         <activity
-            android:name=".Google"
+            android:name=".Menu"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -22,7 +22,34 @@
             </intent-filter>
         </activity>
         <activity
-            android:name=".ManHinhChao"
+            android:name=".SignUp"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".SignIn"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".Login"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".Google"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -32,6 +59,15 @@
         </activity>
         <activity
             android:name=".MainActivity"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".ManHinhChao"
             android:exported="true"
             android:label="@string/app_name"
             android:theme="@style/Theme.Kotlin_SU24_Group5">
